{"latex":[{"code":"\n\\begin{tikzpicture}[start chain=1 going below, node distance=0mm,\nzone/.style={on chain=1, dashed, draw=gray, text centered, text width=3cm, minimum height = 30mm, text=gray},\nparameter/.style={on chain=1, dashed, draw=gray, text centered, text width=3cm, minimum height = 10mm, text=gray},\nsavedreg/.style={on chain=1, draw=black, text centered, text width=3cm, minimum height = 10mm},\nlocalvar/.style={on chain=1, draw=black, text centered, text width=3cm, minimum height = 10mm, fill=blue!10}]\n\\node (dd0) [zone] {chiamante (record precedente)};\n\\node at ($ (dd0) + (1.7,0) $) [anchor=west] {sp offset};\n\\node (dd1) [savedreg] {ra };\n\\node at ($ (dd1) + (1.7,0) $) [anchor=west] {8};\n\\node (dd2) [savedreg] {s0 (reclamato per y)};\n\\node at ($ (dd2) + (1.7,0) $) [anchor=west] {sp + 0};\n\\end{tikzpicture}\n","clss":"standalone","name":"complete diagram","sfx":"complete-diagram","engine":"pdflatex"},{"code":"\n\\begin{tikzpicture}[start chain=1 going below, node distance=0mm,\nzone/.style={on chain=1, dashed, draw=gray, text centered, text width=3cm, minimum height = 30mm, text=gray},\nparameter/.style={on chain=1, dashed, draw=gray, text centered, text width=3cm, minimum height = 10mm, text=gray},\nsavedreg/.style={on chain=1, draw=black, text centered, text width=3cm, minimum height = 10mm},\nlocalvar/.style={on chain=1, draw=black, text centered, text width=3cm, minimum height = 10mm, fill=blue!10}]\n\\node (dd0) [zone] {chiamante record precedente};\n\\node at ($ (dd0) + (1.7,0) $) [anchor=west] {\\ldots};\n\\node (dd1) [savedreg] {};\n\\node at ($ (dd1) + (1.7,0) $) [anchor=west] {\\ldots};\n\\node (dd2) [savedreg] {};\n\\node at ($ (dd2) + (1.7,0) $) [anchor=west] {\\ldots};\n\\end{tikzpicture}\n","clss":"standalone","name":"blank diagram","sfx":"blank-diagram","engine":"pdflatex"},{"code":"\n\\begin{minted}[obeytabs=true,autogobble,baselinestretch=0.95,linenos=true]{asm}\n\n# Stack frame information for function 'f':\n# - register a0 contains x (size: 8 bytes)\n# - register a1 contains y (size: 8 bytes)\n# - saved reg ra at stack offset: 8\n# - saved reg s0 at stack offset: 0\n\n\n\n# function prologue\n          .text\n          .globl f\nf:\n          addi sp, sp, -16\n          sd   ra, 8(sp)\n          sd   s0, 0(sp)\n\n\n# function body\n          li   t0, 0\n          beq  a1, t0, ramoThen\nramoElse:\n          mv   s0, a1\n          call __umoddi3\n          mv   a1, a0\n          mv   a0, s0\n          call f\n          j    fEPI\n\nramoThen:\n          j    fEPI\n\n\n\n\n# function epilogue\nfEPI:\n          ld   ra, 8(sp)\n          ld   s0, 0(sp)\n          addi sp, sp, 16\n          ret\n\\end{minted}","clss":"standalone","name":"asm source full","sfx":"asm-source-full","engine":"pdflatex","addoptions":"--usepackage minted -r varwidth"},{"code":"\n\\begin{minted}[obeytabs=true,autogobble,baselinestretch=0.95,linenos=true]{asm}\n\n# Stack frame information for function 'f':\n# - register a0 contains x (size: 8 bytes)\n# - register a1 contains y (size: 8 bytes)\n# - saved reg ra at stack offset: 8\n# - saved reg s0 at stack offset: 0\n\n\n\n# function prologue\n      .text\n      .globl f\nf:\n      addi sp, sp, -16\n      sd   ra, 8(sp)\n      sd   s0, 0(sp)\n\n\n# function body\n\n\n# function epilogue\nfEPI:\n      ld   ra, 8(sp)\n      ld   s0, 0(sp)\n      addi sp, sp, 16\n      ret\n\\end{minted}","clss":"standalone","name":"asm source empty","sfx":"asm-source-empty","engine":"pdflatex","addoptions":"--usepackage minted -r varwidth"},{"code":"\n\\begin{verbatim}\n\n- parametro x (dimensione 8 bytes) nel registro: _____\n- parametro y (dimensione 8 bytes) nel registro: _____\n- spiazzamento sp salvataggio di ra: _____\n- spiazzamento sp salvataggio di s0: _____\n  \n\\end{verbatim}","clss":"standalone","name":"blank table","sfx":"blank-table","engine":"pdflatex","addoptions":"-r varwidth"},{"code":"\n\\begin{minted}[obeytabs=true,autogobble,baselinestretch=0.95,linenos=true]{c}\n#include <stdint.h>\n\n/* Per convertire (x % y) si usi: __umoddi3(x,y); */\n\nuint64_t fRef(uint64_t x, uint64_t y) {\n  if (y == 0)\n    return x;\n  else {\n    return fRef(y, x % y);\n  }\n}\n\n\\end{minted}","clss":"standalone","name":"c source","sfx":"c-source","engine":"pdflatex","addoptions":"--usepackage minted -r varwidth"}]}
